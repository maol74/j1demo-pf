<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core">

    <h:outputScript library="js" name="shCoreStaticInclude.js" />
    <h:outputStylesheet library="css" name="SyntaxHighlighterModified.css" />
    <br/>
    <br/>
    <p:tabView>
        <p:tab title="first.xhtml">
            <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="#" onclick="dp.sh.Toolbar.Command('ViewSource',this);return false;">view plain</a><a href="#" onclick="dp.sh.Toolbar.Command('CopyToClipboard',this);return false;">copy to clipboard</a><a href="#" onclick="dp.sh.Toolbar.Command('PrintSource',this);return false;">print</a><a href="#" onclick="dp.sh.Toolbar.Command('About',this);return false;">?</a></div></div><ol class="dp-xml" start="1"><li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">p:panelGrid</span><span>&nbsp;</span><span class="attribute">columns</span><span>=</span><span class="attribute-value">"2"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:panelGrid</span><span>&nbsp;</span><span class="attribute">columns</span><span>=</span><span class="attribute-value">"2"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">f:facet</span><span>&nbsp;</span><span class="attribute">name</span><span>=</span><span class="attribute-value">"header"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Credentials&nbsp;Page&nbsp;-&nbsp;Person&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">f:facet</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">for</span><span>=</span><span class="attribute-value">"firstname"</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"First&nbsp;name:"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:inputText</span><span>&nbsp;</span><span class="attribute">id</span><span>=</span><span class="attribute-value">"firstname"</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"\#{personBean.firstName}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">for</span><span>=</span><span class="attribute-value">"secondname"</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Second&nbsp;name"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:inputText</span><span>&nbsp;</span><span class="attribute">id</span><span>=</span><span class="attribute-value">"secondname"</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"\#{personBean.secondName}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">f:facet</span><span>&nbsp;</span><span class="attribute">name</span><span>=</span><span class="attribute-value">"footer"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">h:commandButton</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Next&nbsp;(Address)"</span><span>&nbsp;</span><span class="attribute">action</span><span>=</span><span class="attribute-value">"address"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">h:commandButton</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Choose&nbsp;Avatar"</span><span>&nbsp;</span><span class="attribute">action</span><span>=</span><span class="attribute-value">"chooseAvatar"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">f:facet</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">p:panelGrid</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">ui:include</span><span>&nbsp;</span><span class="attribute">src</span><span>=</span><span class="attribute-value">"avatarPreview.xhtml"</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">p:panelGrid</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="tag">&lt;</span><span class="tag-name">c:if</span><span>&nbsp;</span><span class="attribute">test</span><span>=</span><span class="attribute-value">"\#{storageBean.isStorageUsed().get()}"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;You&nbsp;have&nbsp;already&nbsp;stored&nbsp;values,&nbsp;click&nbsp;<span class="tag">&lt;</span><span class="tag-name">h:commandLink</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"here"</span><span>&nbsp;</span><span class="attribute">action</span><span>=</span><span class="attribute-value">"restore"</span><span class="tag">/&gt;</span><span>&nbsp;to&nbsp;restore&nbsp;them.&nbsp;&nbsp;</span></span></li><li class=""><span><span class="tag">&lt;/</span><span class="tag-name">c:if</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li></ol><textarea style="display:none;" class="originalCode">&lt;p:panelGrid columns="2"&gt;
                    &lt;p:panelGrid columns="2"&gt;
                        &lt;f:facet name="header"&gt;
                            Credentials Page - Person
                        &lt;/f:facet&gt;

                        &lt;p:outputLabel for="firstname" value="First name:" /&gt;
                        &lt;p:inputText id="firstname" value="\#{personBean.firstName}" /&gt;

                        &lt;p:outputLabel for="secondname" value="Second name" /&gt;
                        &lt;p:inputText id="secondname" value="\#{personBean.secondName}" /&gt;

                        &lt;f:facet name="footer"&gt;
                            &lt;h:commandButton value="Next (Address)" action="address" /&gt;
                            &lt;h:commandButton value="Choose Avatar" action="chooseAvatar" /&gt;
                        &lt;/f:facet&gt;
                    &lt;/p:panelGrid&gt;
                    &lt;ui:include src="avatarPreview.xhtml"/&gt;
                &lt;/p:panelGrid&gt;
                &lt;br/&gt;
                &lt;c:if test="\#{storageBean.isStorageUsed().get()}"&gt;
                    You have already stored values, click &lt;h:commandLink value="here" action="restore"/&gt; to restore them.
                &lt;/c:if&gt;</textarea></div>
            </p:tab>
            <p:tab title="second.xhtml">
                <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="#" onclick="dp.sh.Toolbar.Command('ViewSource',this);return false;">view plain</a><a href="#" onclick="dp.sh.Toolbar.Command('CopyToClipboard',this);return false;">copy to clipboard</a><a href="#" onclick="dp.sh.Toolbar.Command('PrintSource',this);return false;">print</a><a href="#" onclick="dp.sh.Toolbar.Command('About',this);return false;">?</a></div></div><ol class="dp-xml" start="1"><li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">p:panelGrid</span><span>&nbsp;</span><span class="attribute">columns</span><span>=</span><span class="attribute-value">"2"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:panelGrid</span><span>&nbsp;</span><span class="attribute">columns</span><span>=</span><span class="attribute-value">"2"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">f:facet</span><span>&nbsp;</span><span class="attribute">name</span><span>=</span><span class="attribute-value">"header"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Credentials&nbsp;Page&nbsp;-&nbsp;Address&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">f:facet</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Given&nbsp;name:"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"\#{personBean.firstName}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Surname:"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"\#{personBean.secondName}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">for</span><span>=</span><span class="attribute-value">"street"</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Street:"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:inputText</span><span>&nbsp;</span><span class="attribute">id</span><span>=</span><span class="attribute-value">"street"</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"\#{personBean.street}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">for</span><span>=</span><span class="attribute-value">"city"</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"City:"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:inputText</span><span>&nbsp;</span><span class="attribute">id</span><span>=</span><span class="attribute-value">"city"</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"\#{personBean.city}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">f:facet</span><span>&nbsp;</span><span class="attribute">name</span><span>=</span><span class="attribute-value">"footer"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comments">&lt;!--&nbsp;Using&nbsp;implicit&nbsp;navigation&nbsp;for&nbsp;the&nbsp;third,&nbsp;confirmation&nbsp;page&nbsp;--&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">h:commandButton</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Next&nbsp;(Confirmation)"</span><span>&nbsp;</span><span class="attribute">action</span><span>=</span><span class="attribute-value">"third"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">h:commandButton</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Previous&nbsp;(Person)"</span><span>&nbsp;</span><span class="attribute">action</span><span>=</span><span class="attribute-value">"first"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">f:facet</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">p:panelGrid</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">ui:include</span><span>&nbsp;</span><span class="attribute">src</span><span>=</span><span class="attribute-value">"avatarPreview.xhtml"</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="tag">&lt;/</span><span class="tag-name">p:panelGrid</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li></ol><textarea style="display:none;" class="originalCode">&lt;p:panelGrid columns="2"&gt;
                    &lt;p:panelGrid columns="2"&gt;
                        &lt;f:facet name="header"&gt;
                            Credentials Page - Address
                        &lt;/f:facet&gt;

                        &lt;p:outputLabel value="Given name:" /&gt;
                        &lt;p:outputLabel value="\#{personBean.firstName}" /&gt;
                        &lt;p:outputLabel value="Surname:" /&gt;
                        &lt;p:outputLabel value="\#{personBean.secondName}" /&gt;

                        &lt;p:outputLabel for="street" value="Street:" /&gt;
                        &lt;p:inputText id="street" value="\#{personBean.street}" /&gt;
                        &lt;p:outputLabel for="city" value="City:" /&gt;
                        &lt;p:inputText id="city" value="\#{personBean.city}" /&gt;

                        &lt;f:facet name="footer"&gt;
                            &lt;!-- Using implicit navigation for the third, confirmation page --&gt;
                            &lt;h:commandButton value="Next (Confirmation)" action="third" /&gt;
                            &lt;h:commandButton value="Previous (Person)" action="first" /&gt;
                        &lt;/f:facet&gt;
                    &lt;/p:panelGrid&gt;
                    &lt;ui:include src="avatarPreview.xhtml"/&gt;
                &lt;/p:panelGrid&gt;</textarea></div>
            </p:tab>
            <p:tab title="third.xhtml">
                <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="#" onclick="dp.sh.Toolbar.Command('ViewSource',this);return false;">view plain</a><a href="#" onclick="dp.sh.Toolbar.Command('CopyToClipboard',this);return false;">copy to clipboard</a><a href="#" onclick="dp.sh.Toolbar.Command('PrintSource',this);return false;">print</a><a href="#" onclick="dp.sh.Toolbar.Command('About',this);return false;">?</a></div></div><ol class="dp-xml" start="1"><li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">p:panelGrid</span><span>&nbsp;</span><span class="attribute">columns</span><span>=</span><span class="attribute-value">"2"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:panelGrid</span><span>&nbsp;</span><span class="attribute">columns</span><span>=</span><span class="attribute-value">"2"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">f:facet</span><span>&nbsp;</span><span class="attribute">name</span><span>=</span><span class="attribute-value">"header"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Credentials&nbsp;Page&nbsp;-&nbsp;Confirmation&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">f:facet</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Given&nbsp;name:"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"\#{personBean.firstName}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Surname:"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"\#{personBean.secondName}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Street:"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"\#{personBean.street}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"City:"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">p:outputLabel</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"\#{personBean.city}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">f:facet</span><span>&nbsp;</span><span class="attribute">name</span><span>=</span><span class="attribute-value">"footer"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">h:commandButton</span><span>&nbsp;</span><span class="attribute">id</span><span>=</span><span class="attribute-value">"index"</span><span>&nbsp;</span><span class="attribute">value</span><span>=</span><span class="attribute-value">"Back&nbsp;to&nbsp;index"</span><span>&nbsp;</span><span class="attribute">action</span><span>=</span><span class="attribute-value">"index"</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">f:facet</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;/</span><span class="tag-name">p:panelGrid</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">ui:include</span><span>&nbsp;</span><span class="attribute">src</span><span>=</span><span class="attribute-value">"avatarPreview.xhtml"</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">p:panelGrid</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li></ol><textarea style="display:none;" class="originalCode">&lt;p:panelGrid columns="2"&gt;
                    &lt;p:panelGrid columns="2"&gt;
                        &lt;f:facet name="header"&gt;
                            Credentials Page - Confirmation
                        &lt;/f:facet&gt;

                        &lt;p:outputLabel value="Given name:" /&gt;
                        &lt;p:outputLabel value="\#{personBean.firstName}" /&gt;
                        &lt;p:outputLabel value="Surname:" /&gt;
                        &lt;p:outputLabel value="\#{personBean.secondName}" /&gt;
                        &lt;p:outputLabel value="Street:" /&gt;
                        &lt;p:outputLabel value="\#{personBean.street}" /&gt;
                        &lt;p:outputLabel value="City:" /&gt;
                        &lt;p:outputLabel value="\#{personBean.city}" /&gt;

                        &lt;f:facet name="footer"&gt;
                            &lt;h:commandButton id="index" value="Back to index" action="index"/&gt;
                        &lt;/f:facet&gt;
                    &lt;/p:panelGrid&gt;
                    &lt;ui:include src="avatarPreview.xhtml"/&gt;
                &lt;/p:panelGrid&gt;</textarea></div>
            </p:tab>
            <p:tab title="avatarPreview.xhtml">
                <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="#" onclick="dp.sh.Toolbar.Command('ViewSource',this);return false;">view plain</a><a href="#" onclick="dp.sh.Toolbar.Command('CopyToClipboard',this);return false;">copy to clipboard</a><a href="#" onclick="dp.sh.Toolbar.Command('PrintSource',this);return false;">print</a><a href="#" onclick="dp.sh.Toolbar.Command('About',this);return false;">?</a></div></div><ol class="dp-xml" start="1"><li class="alt"><span><span class="tag">&lt;</span><span class="tag-name">p:panelGrid</span><span>&nbsp;</span><span class="attribute">columns</span><span>=</span><span class="attribute-value">"1"</span><span>&nbsp;</span><span class="attribute">rendered</span><span>=</span><span class="attribute-value">"\#{personBean.avatar&nbsp;!=&nbsp;null}"</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="tag">&lt;</span><span class="tag-name">h:graphicImage</span><span>&nbsp;</span><span class="attribute">url</span><span>=</span><span class="attribute-value">"\#{resource['img:'&nbsp;+=&nbsp;personBean.avatar]}"</span><span>&nbsp;</span><span class="tag">/&gt;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="tag">&lt;/</span><span class="tag-name">p:panelGrid</span><span class="tag">&gt;</span><span>&nbsp;&nbsp;</span></span></li></ol><textarea style="display:none;" class="originalCode">&lt;p:panelGrid columns="1" rendered="\#{personBean.avatar != null}"&gt;
                    &lt;h:graphicImage url="\#{resource['img:' += personBean.avatar]}" /&gt;
                &lt;/p:panelGrid&gt;</textarea></div>
            </p:tab>
            <p:tab title="CredentialsFlow.java">
                <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="#" onclick="dp.sh.Toolbar.Command('ViewSource',this);return false;">view plain</a><a href="#" onclick="dp.sh.Toolbar.Command('CopyToClipboard',this);return false;">copy to clipboard</a><a href="#" onclick="dp.sh.Toolbar.Command('PrintSource',this);return false;">print</a><a href="#" onclick="dp.sh.Toolbar.Command('About',this);return false;">?</a></div></div><ol class="dp-j" start="1"><li class="alt"><span><span class="keyword">package</span><span>&nbsp;javaone.con3638.facesflow;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;javax.enterprise.context.Dependent;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;javax.enterprise.inject.Produces;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;javax.faces.flow.Flow;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;javax.faces.flow.builder.FlowBuilder;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;javax.faces.flow.builder.FlowBuilderParameter;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;javax.faces.flow.builder.FlowDefinition;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;javax.inject.Named;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="annotation">@Named</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="annotation">@Dependent</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;CredentialsFlow&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">private</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">final</span><span>&nbsp;</span><span class="keyword">long</span><span>&nbsp;serialVersionUID&nbsp;=&nbsp;</span><span class="number">1</span><span>;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/**&nbsp;ID&nbsp;of&nbsp;the&nbsp;flow.&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">final</span><span>&nbsp;String&nbsp;ID&nbsp;=&nbsp;</span><span class="string">"credentialsFlow"</span><span>;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;Defines&nbsp;that&nbsp;this&nbsp;method&nbsp;produces&nbsp;definition&nbsp;of&nbsp;the&nbsp;flow.</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation">@Produces</span><span>&nbsp;</span><span class="annotation">@FlowDefinition</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;@FlowBuilderParameter&nbsp;causes&nbsp;that&nbsp;FlowBuilder&nbsp;will&nbsp;be&nbsp;passed&nbsp;to&nbsp;this&nbsp;method</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;Flow&nbsp;defineFlow(</span><span class="annotation">@FlowBuilderParameter</span><span>&nbsp;FlowBuilder&nbsp;flowBuilder)&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flowBuilder.id(<span class="string">""</span><span>,&nbsp;ID);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;return&nbsp;node&nbsp;from&nbsp;the&nbsp;flow</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flowBuilder.returnNode(<span class="string">"index"</span><span>).fromOutcome(</span><span class="string">"/index"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;1.&nbsp;page&nbsp;-&nbsp;start&nbsp;node</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flowBuilder.viewNode(ID,&nbsp;<span class="string">"/"</span><span>&nbsp;+&nbsp;ID&nbsp;+&nbsp;</span><span class="string">"/first.xhtml"</span><span>).markAsStartNode();&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;2.&nbsp;page&nbsp;-&nbsp;explicitly&nbsp;named</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flowBuilder.viewNode(<span class="string">"address"</span><span>,&nbsp;</span><span class="string">"/"</span><span>&nbsp;+&nbsp;ID&nbsp;+&nbsp;</span><span class="string">"/second.xhtml"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;3.&nbsp;page&nbsp;-&nbsp;we&nbsp;can&nbsp;use&nbsp;also&nbsp;implicit&nbsp;navigation/naming&nbsp;if&nbsp;the&nbsp;action&nbsp;is</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;&nbsp;&nbsp;called&nbsp;as&nbsp;the&nbsp;view&nbsp;node</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="comment">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flowBuilder.viewNode("third",&nbsp;"/"&nbsp;+&nbsp;ID&nbsp;+&nbsp;"/third.xhtml");</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;switch&nbsp;flow&nbsp;to&nbsp;the&nbsp;avatarChooser&nbsp;one</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flowBuilder.flowCallNode(<span class="string">"chooseAvatar"</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;which&nbsp;flow&nbsp;to&nbsp;call</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.flowReference(<span class="string">""</span><span>,&nbsp;</span><span class="string">"avatarChooser"</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;outgoing&nbsp;parameters&nbsp;-&nbsp;name&nbsp;of&nbsp;the&nbsp;user</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.outboundParameter(<span class="string">"firstName"</span><span>,&nbsp;</span><span class="string">"\#{personBean.firstName}"</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.outboundParameter(<span class="string">"secondName"</span><span>,&nbsp;</span><span class="string">"\#{personBean.secondName}"</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;store&nbsp;data&nbsp;by&nbsp;leaving&nbsp;the&nbsp;flow&nbsp;-&nbsp;can&nbsp;be&nbsp;restored&nbsp;then</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flowBuilder.finalizer(<span class="string">"\#{storageBean.storeData()}"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;restore&nbsp;data&nbsp;by&nbsp;calling&nbsp;"restore"&nbsp;action</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flowBuilder.methodCallNode(<span class="string">"restore"</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;method&nbsp;to&nbsp;call</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.expression(<span class="string">"\#{storageBean.restoreData()}"</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;where&nbsp;to&nbsp;go&nbsp;then</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.defaultOutcome(ID);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;saved&nbsp;information&nbsp;about&nbsp;avatar&nbsp;set&nbsp;to&nbsp;the&nbsp;personBean</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flowBuilder.inboundParameter(<span class="string">"avatar"</span><span>,&nbsp;</span><span class="string">"\#{personBean.avatar}"</span><span>);&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;flowBuilder.getFlow();&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;String&nbsp;getId()&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;ID;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol><textarea style="display:none;" class="originalCode">package javaone.con3638.facesflow;
                import javax.enterprise.context.Dependent;
                import javax.enterprise.inject.Produces;
                import javax.faces.flow.Flow;
                import javax.faces.flow.builder.FlowBuilder;
                import javax.faces.flow.builder.FlowBuilderParameter;
                import javax.faces.flow.builder.FlowDefinition;
                import javax.inject.Named;

                @Named
                @Dependent
                public class CredentialsFlow {

                    private static final long serialVersionUID = 1;

                    /** ID of the flow. */
                    public static final String ID = "credentialsFlow";

                    // Defines that this method produces definition of the flow.
                    @Produces @FlowDefinition
                    // @FlowBuilderParameter causes that FlowBuilder will be passed to this method
                    public Flow defineFlow(@FlowBuilderParameter FlowBuilder flowBuilder) {
                        flowBuilder.id("", ID);

                        // return node from the flow
                        flowBuilder.returnNode("index").fromOutcome("/index");

                        // 1. page - start node
                        flowBuilder.viewNode(ID, "/" + ID + "/first.xhtml").markAsStartNode();

                        // 2. page - explicitly named
                        flowBuilder.viewNode("address", "/" + ID + "/second.xhtml");

                        // 3. page - we can use also implicit navigation/naming if the action is
                        //   called as the view node
                //         flowBuilder.viewNode("third", "/" + ID + "/third.xhtml");

                        // switch flow to the avatarChooser one
                        flowBuilder.flowCallNode("chooseAvatar")
                                // which flow to call
                                .flowReference("", "avatarChooser")
                                // outgoing parameters - name of the user
                                .outboundParameter("firstName", "\#{personBean.firstName}")
                                .outboundParameter("secondName", "\#{personBean.secondName}");

                        // store data by leaving the flow - can be restored then
                        flowBuilder.finalizer("\#{storageBean.storeData()}");

                        // restore data by calling "restore" action
                        flowBuilder.methodCallNode("restore")
                                // method to call
                                .expression("\#{storageBean.restoreData()}")
                                // where to go then
                                .defaultOutcome(ID);

                        // saved information about avatar set to the personBean
                        flowBuilder.inboundParameter("avatar", "\#{personBean.avatar}");

                        return flowBuilder.getFlow();
                    }

                    public String getId() {
                        return ID;
                    }

                }
                </textarea></div>
            </p:tab>
            <p:tab title="PersonBean.java">
                <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="#" onclick="dp.sh.Toolbar.Command('ViewSource',this);return false;">view plain</a><a href="#" onclick="dp.sh.Toolbar.Command('CopyToClipboard',this);return false;">copy to clipboard</a><a href="#" onclick="dp.sh.Toolbar.Command('PrintSource',this);return false;">print</a><a href="#" onclick="dp.sh.Toolbar.Command('About',this);return false;">?</a></div></div><ol class="dp-j" start="1"><li class="alt"><span><span class="keyword">package</span><span>&nbsp;javaone.con3638.facesflow;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;javax.inject.Named;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;javax.faces.flow.FlowScoped;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="annotation">@Named</span><span>(value&nbsp;=&nbsp;</span><span class="string">"personBean"</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="annotation">@FlowScoped</span><span>(CredentialsFlow.ID)&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;PersonBean&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">private</span><span>&nbsp;String&nbsp;firstName;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">private</span><span>&nbsp;String&nbsp;secondName;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">private</span><span>&nbsp;String&nbsp;street;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">private</span><span>&nbsp;String&nbsp;city;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">private</span><span>&nbsp;String&nbsp;avatar;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;String&nbsp;getFirstName()&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;firstName;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;setFirstName(String&nbsp;firstName)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">this</span><span>.firstName&nbsp;=&nbsp;firstName;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;String&nbsp;getSecondName()&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;secondName;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;setSecondName(String&nbsp;secondName)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">this</span><span>.secondName&nbsp;=&nbsp;secondName;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;String&nbsp;getStreet()&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;street;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;setStreet(String&nbsp;street)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">this</span><span>.street&nbsp;=&nbsp;street;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;String&nbsp;getCity()&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;city;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;setCity(String&nbsp;city)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">this</span><span>.city&nbsp;=&nbsp;city;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;String&nbsp;getAvatar()&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;avatar;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;setAvatar(String&nbsp;avatar)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">this</span><span>.avatar&nbsp;=&nbsp;avatar;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol><textarea style="display:none;" class="originalCode">package javaone.con3638.facesflow;

                import javax.inject.Named;
                import javax.faces.flow.FlowScoped;

                @Named(value = "personBean")
                @FlowScoped(CredentialsFlow.ID)
                public class PersonBean {

                    private String firstName;
                    private String secondName;
                    private String street;
                    private String city;
                    private String avatar;

                    public String getFirstName() {
                        return firstName;
                    }

                    public void setFirstName(String firstName) {
                        this.firstName = firstName;
                    }

                    public String getSecondName() {
                        return secondName;
                    }

                    public void setSecondName(String secondName) {
                        this.secondName = secondName;
                    }

                    public String getStreet() {
                        return street;
                    }

                    public void setStreet(String street) {
                        this.street = street;
                    }

                    public String getCity() {
                        return city;
                    }

                    public void setCity(String city) {
                        this.city = city;
                    }

                    public String getAvatar() {
                        return avatar;
                    }

                    public void setAvatar(String avatar) {
                        this.avatar = avatar;
                    }

                }
                </textarea></div>
            </p:tab>
            <p:tab title="StorageBean.java">
                <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="#" onclick="dp.sh.Toolbar.Command('ViewSource',this);return false;">view plain</a><a href="#" onclick="dp.sh.Toolbar.Command('CopyToClipboard',this);return false;">copy to clipboard</a><a href="#" onclick="dp.sh.Toolbar.Command('PrintSource',this);return false;">print</a><a href="#" onclick="dp.sh.Toolbar.Command('About',this);return false;">?</a></div></div><ol class="dp-j" start="1"><li class="alt"><span><span class="keyword">package</span><span>&nbsp;javaone.con3638.facesflow;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;java.io.IOException;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;java.io.Serializable;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;java.util.concurrent.atomic.AtomicBoolean;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;java.util.logging.Level;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;java.util.logging.Logger;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;javax.inject.Named;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;javax.enterprise.context.SessionScoped;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;javax.faces.context.ExternalContext;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">import</span><span>&nbsp;javax.faces.context.FacesContext;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">import</span><span>&nbsp;javax.inject.Inject;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="annotation">@Named</span><span>(value&nbsp;=&nbsp;</span><span class="string">"storageBean"</span><span>)&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="annotation">@SessionScoped</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;StorageBean&nbsp;</span><span class="keyword">extends</span><span>&nbsp;PersonBean&nbsp;</span><span class="keyword">implements</span><span>&nbsp;Serializable&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation">@Inject</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="annotation">@Named</span><span>(value&nbsp;=&nbsp;</span><span class="string">"personBean"</span><span>)&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;PersonBean&nbsp;personBean;&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">/**&nbsp;Holds&nbsp;information&nbsp;whether&nbsp;the&nbsp;registration&nbsp;wizard&nbsp;was&nbsp;already&nbsp;used.&nbsp;*/</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">private</span><span>&nbsp;</span><span class="keyword">final</span><span>&nbsp;AtomicBoolean&nbsp;isStorageUsed&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;AtomicBoolean(</span><span class="keyword">false</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;storeData()&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setFirstName(personBean.getFirstName());&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setSecondName(personBean.getSecondName());&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setStreet(personBean.getStreet());&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setCity(personBean.getCity());&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setAvatar(personBean.getAvatar());&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;isStorageUsed.set(<span class="keyword">true</span><span>);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;this&nbsp;is&nbsp;hack&nbsp;to&nbsp;prevent&nbsp;second&nbsp;flow&nbsp;(avatarChooser)&nbsp;to&nbsp;be&nbsp;called&nbsp;back</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;&nbsp;&nbsp;since&nbsp;no&nbsp;flow&nbsp;is&nbsp;finished&nbsp;without&nbsp;calling&nbsp;its&nbsp;return&nbsp;node&nbsp;</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;redirectAway();&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;restoreData()&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;personBean.setFirstName(getFirstName());&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;personBean.setSecondName(getSecondName());&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;personBean.setStreet(getStreet());&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;personBean.setCity(getCity());&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;personBean.setAvatar(getAvatar());&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;AtomicBoolean&nbsp;isStorageUsed()&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;isStorageUsed;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">private</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;redirectAway()&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>&nbsp;{&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ExternalContext&nbsp;externalContext&nbsp;=&nbsp;FacesContext.getCurrentInstance().getExternalContext();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;externalContext.redirect(FacesContext.getCurrentInstance().getExternalContext().getRequestContextPath());&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="keyword">catch</span><span>&nbsp;(IOException&nbsp;ex)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logger.getLogger(StorageBean.<span class="keyword">class</span><span>.getName()).log(Level.SEVERE,&nbsp;</span><span class="keyword">null</span><span>,&nbsp;ex);&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>}&nbsp;&nbsp;</span></li></ol><textarea style="display:none;" class="originalCode">package javaone.con3638.facesflow;
                import java.io.IOException;
                import java.io.Serializable;
                import java.util.concurrent.atomic.AtomicBoolean;
                import java.util.logging.Level;
                import java.util.logging.Logger;
                import javax.inject.Named;
                import javax.enterprise.context.SessionScoped;
                import javax.faces.context.ExternalContext;
                import javax.faces.context.FacesContext;
                import javax.inject.Inject;

                @Named(value = "storageBean")
                @SessionScoped
                public class StorageBean extends PersonBean implements Serializable {

                    @Inject
                    @Named(value = "personBean")
                    PersonBean personBean;

                    /** Holds information whether the registration wizard was already used. */
                    private final AtomicBoolean isStorageUsed = new AtomicBoolean(false);

                    public void storeData() {
                        setFirstName(personBean.getFirstName());
                        setSecondName(personBean.getSecondName());
                        setStreet(personBean.getStreet());
                        setCity(personBean.getCity());
                        setAvatar(personBean.getAvatar());
                        isStorageUsed.set(true);

                        // this is hack to prevent second flow (avatarChooser) to be called back
                        //   since no flow is finished without calling its return node
                        redirectAway();
                    }

                    public void restoreData() {
                        personBean.setFirstName(getFirstName());
                        personBean.setSecondName(getSecondName());
                        personBean.setStreet(getStreet());
                        personBean.setCity(getCity());
                        personBean.setAvatar(getAvatar());
                    }

                    public AtomicBoolean isStorageUsed() {
                        return isStorageUsed;
                    }

                    private void redirectAway() {
                        try {
                            ExternalContext externalContext = FacesContext.getCurrentInstance().getExternalContext();
                            externalContext.redirect(FacesContext.getCurrentInstance().getExternalContext().getRequestContextPath());
                        } catch (IOException ex) {
                            Logger.getLogger(StorageBean.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }
                </textarea></div>
            </p:tab>
        </p:tabView>
</ui:composition>

