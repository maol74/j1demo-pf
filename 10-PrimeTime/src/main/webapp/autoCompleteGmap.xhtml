<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html   xmlns="http://www.w3.org/1999/xhtml"
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:p="http://primefaces.org/ui"
        xmlns:h="http://xmlns.jcp.org/jsf/html">
    <h:head>
        <title>Auto Complete with Google Maps Sample</title>
        <h:outputScript library="js" name="shCoreStaticInclude.js" />        
        <h:outputStylesheet library="css" name="SyntaxHighlighterModified.css" />        
        <script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>
    </h:head>
    <h:body>
        <h:form>
            <p:panel header="Address Selector">
                <h:panelGrid columns="2">
                    <p:outputLabel value="Address: " />
                    <p:autoComplete id="acMinLength" minQueryLength="3" size="62"
                                    value="#{mapsBean.selectedAddress}" effect="fade"
                                    completeMethod="#{mapsBean.completeAddress}"
                                    var="loc" itemLabel="#{loc.address}" itemValue="#{loc}">
                        <p:ajax event="itemSelect" listener="#{mapsBean.handleLocationSelect}" update="map" />
                        <f:converter converterId="locationConverter" />
                    </p:autoComplete>
                </h:panelGrid>
                <h:panelGrid columns="1">
                    <h:panelGroup>
                        <p:gmap id="map" center="#{mapsBean.selectedLocation}" zoom="#{mapsBean.zoomLevel}" type="hybrid"
                                style="width:600px;height:400px" model="#{mapsBean.markerModel}" />
                    </h:panelGroup>
                </h:panelGrid>
            </p:panel>
            <br/>
            <br/>
            <p:tabView>
                <p:tab title="xhtml">
                    <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="#" onclick="dp.sh.Toolbar.Command('ViewSource',this);return false;">view plain</a><a href="#" onclick="dp.sh.Toolbar.Command('CopyToClipboard',this);return false;">copy to clipboard</a><a href="#" onclick="dp.sh.Toolbar.Command('PrintSource',this);return false;">print</a><a href="#" onclick="dp.sh.Toolbar.Command('About',this);return false;">?</a></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span>&lt;p:autoComplete&nbsp;id=</span><span class="string">"acMinLength"</span><span>&nbsp;minQueryLength=</span><span class="string">"3"</span><span>&nbsp;size=</span><span class="string">"62"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value=<span class="string">"\#{mapsBean.selectedAddress}"</span><span>&nbsp;effect=</span><span class="string">"fade"</span><span>&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;completeMethod=<span class="string">"\#{mapsBean.completeAddress}"</span><span>&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var=<span class="string">"loc"</span><span>&nbsp;itemLabel=</span><span class="string">"\#{loc.address}"</span><span>&nbsp;itemValue=</span><span class="string">"\#{loc}"</span><span>&gt;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;p:ajax&nbsp;event=<span class="string">"itemSelect"</span><span>&nbsp;listener=</span><span class="string">"\#{mapsBean.handleLocationSelect}"</span><span>&nbsp;update=</span><span class="string">"map"</span><span>&nbsp;/&gt;&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&lt;f:converter&nbsp;converterId=<span class="string">"locationConverter"</span><span>&nbsp;/&gt;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&lt;/p:autoComplete&gt;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>map<span class="string">"&nbsp;center="</span><span>\#{mapsBean.selectedLocation}</span><span class="string">"&nbsp;zoom="</span><span>\#{mapsBean.zoomLevel}</span><span class="string">"&nbsp;type="</span><span>hybrid"&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;style=<span class="string">"width:600px;height:400px"</span><span>&nbsp;model=</span><span class="string">"\#{mapsBean.markerModel}"</span><span>&nbsp;/&gt;&nbsp;&nbsp;</span></span></li></ol><textarea style="display:none;" class="originalCode">                    
                        &lt;p:autoComplete id="acMinLength" minQueryLength="3" size="62"
                                        value="\#{mapsBean.selectedAddress}" effect="fade"
                                        completeMethod="\#{mapsBean.completeAddress}"
                                        var="loc" itemLabel="\#{loc.address}" itemValue="\#{loc}"&gt;
                            &lt;p:ajax event="itemSelect" listener="\#{mapsBean.handleLocationSelect}" update="map" /&gt;
                            &lt;f:converter converterId="locationConverter" /&gt;
                        &lt;/p:autoComplete&gt;


                        &lt;p:gmap id="map" center="\#{mapsBean.selectedLocation}" zoom="\#{mapsBean.zoomLevel}" type="hybrid"
                                    style="width:600px;height:400px" model="\#{mapsBean.markerModel}" /&gt;
                    </textarea></div>                    
                </p:tab>
                <p:tab title="Code">
                    <div class="dp-highlighter"><div class="bar"><div class="tools"><a href="#" onclick="dp.sh.Toolbar.Command('ViewSource',this);return false;">view plain</a><a href="#" onclick="dp.sh.Toolbar.Command('CopyToClipboard',this);return false;">copy to clipboard</a><a href="#" onclick="dp.sh.Toolbar.Command('PrintSource',this);return false;">print</a><a href="#" onclick="dp.sh.Toolbar.Command('About',this);return false;">?</a></div></div><ol start="1" class="dp-cpp"><li class="alt"><span><span class="keyword">private</span><span>&nbsp;Location&nbsp;selectedAddress;&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">private</span><span>&nbsp;String&nbsp;selectedLocation&nbsp;=&nbsp;DEFAULT_LOCATION;&nbsp;&nbsp;</span></span></li><li class="alt"><span><span class="keyword">private</span><span>&nbsp;MapModel&nbsp;markerModel&nbsp;=&nbsp;</span><span class="keyword">new</span><span>&nbsp;DefaultMapModel();&nbsp;&nbsp;</span></span></li><li class=""><span><span class="keyword">private</span><span>&nbsp;</span><span class="datatypes">int</span><span>&nbsp;zoomLevel&nbsp;=&nbsp;4;&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;handleLocationSelect(SelectEvent&nbsp;event)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;zoomLevel&nbsp;=&nbsp;8;&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;Location&nbsp;location&nbsp;=&nbsp;(Location)&nbsp;event.getObject();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;selectedLocation&nbsp;=&nbsp;location.getLatitude()+&nbsp;<span class="string">","</span><span>&nbsp;+&nbsp;location.getLongitude();&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;markerModel.addOverlay(<span class="keyword">new</span><span>&nbsp;Marker(&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">new</span><span>&nbsp;LatLng(location.getLatitude().doubleValue(),&nbsp;location.getLongitude().doubleValue()),&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location.getAddress()));&nbsp;&nbsp;</span></li><li class=""><span>}&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span><span class="keyword">public</span><span>&nbsp;List&lt;Location&gt;&nbsp;completeAddress(String&nbsp;address)&nbsp;throws&nbsp;InvalidKeyException&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;final&nbsp;Geocoder&nbsp;geocoder&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Geocoder();&nbsp;&nbsp;</span></span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;GeocoderRequest&nbsp;geocoderRequest&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;GeocoderRequestBuilder().setAddress(address).setLanguage(</span><span class="string">"en"</span><span>).getGeocoderRequest();&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;GeocodeResponse&nbsp;geocoderResponse&nbsp;=&nbsp;geocoder.geocode(geocoderRequest);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;List&lt;GeocoderResult&gt;&nbsp;results&nbsp;=&nbsp;geocoderResponse.getResults();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;List&lt;Location&gt;&nbsp;locations&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;ArrayList&lt;&gt;();&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">for</span><span>&nbsp;(</span><span class="datatypes">int</span><span>&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;results.size();&nbsp;i++)&nbsp;{&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;GeocoderResult&nbsp;result&nbsp;=&nbsp;results.get(i);&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;GeocoderAddressComponent&gt;&nbsp;addressComponents&nbsp;=&nbsp;result.getAddressComponents();&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Location&nbsp;location&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;Location();&nbsp;&nbsp;</span></span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location.setAddress(result.getFormattedAddress());&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location.setLongitude(result.getGeometry().getLocation().getLng());&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;location.setLatitude(result.getGeometry().getLocation().getLat());&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;locations.add(location);&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li><li class=""><span>&nbsp;&nbsp;</span></li><li class="alt"><span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">return</span><span>&nbsp;locations;&nbsp;&nbsp;</span></span></li><li class=""><span>}&nbsp;&nbsp;</span></li></ol><textarea style="display:none;" class="originalCode">    private Location selectedAddress;
                    private String selectedLocation = DEFAULT_LOCATION;
                    private MapModel markerModel = new DefaultMapModel();
                    private int zoomLevel = 4;

                    public void handleLocationSelect(SelectEvent event) {
                        zoomLevel = 8;
                        Location location = (Location) event.getObject();
                        selectedLocation = location.getLatitude()+ "," + location.getLongitude();

                        markerModel.addOverlay(new Marker(
                                new LatLng(location.getLatitude().doubleValue(), location.getLongitude().doubleValue()),
                                location.getAddress()));
                    }

                    public List&lt;Location&gt; completeAddress(String address) throws InvalidKeyException {
                        final Geocoder geocoder = new Geocoder();
                        GeocoderRequest geocoderRequest = new GeocoderRequestBuilder().setAddress(address).setLanguage("en").getGeocoderRequest();
                        GeocodeResponse geocoderResponse = geocoder.geocode(geocoderRequest);
                        List&lt;GeocoderResult&gt; results = geocoderResponse.getResults();

                        List&lt;Location&gt; locations = new ArrayList&lt;&gt;();

                        for (int i = 0; i &lt; results.size(); i++) {
                            GeocoderResult result = results.get(i);
                            List&lt;GeocoderAddressComponent&gt; addressComponents = result.getAddressComponents();

                            Location location = new Location();
                            location.setAddress(result.getFormattedAddress());
                            location.setLongitude(result.getGeometry().getLocation().getLng());
                            location.setLatitude(result.getGeometry().getLocation().getLat());
                            locations.add(location);
                        }

                        return locations;
                    }</textarea></div>                    
                </p:tab>
            </p:tabView>            
        </h:form>
    </h:body>
</html>

